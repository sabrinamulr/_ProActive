// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProActive2508.Data;

#nullable disable

namespace ProActive2508.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Aufgabe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aufgabenbeschreibung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<int>("Erledigt")
                        .HasColumnType("int");

                    b.Property<int>("ErstellVon")
                        .HasColumnType("int");

                    b.Property<DateTime>("Faellig")
                        .HasColumnType("date");

                    b.Property<int>("Phase")
                        .HasColumnType("int");

                    b.Property<int?>("ProjektId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BenutzerId");

                    b.HasIndex("ProjektId");

                    b.HasIndex("Phase", "Faellig");

                    b.ToTable("Aufgaben", (string)null);
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Benutzer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abteilung")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Personalnummer")
                        .HasColumnType("int");

                    b.Property<string>("Stufe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Verfuegbarkeit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Personalnummer")
                        .IsUnique();

                    b.ToTable("Benutzer", (string)null);
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Kuerzel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Kuerzel")
                        .IsUnique();

                    b.ToTable("Allergene");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Gericht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gerichtname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Gerichtname")
                        .IsUnique();

                    b.ToTable("Gerichte");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.GerichtAllergen", b =>
                {
                    b.Property<int>("GerichtId")
                        .HasColumnType("int");

                    b.Property<int>("AllergenId")
                        .HasColumnType("int");

                    b.HasKey("GerichtId", "AllergenId");

                    b.HasIndex("AllergenId");

                    b.ToTable("GerichtAllergene");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Menueplan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GerichtId")
                        .HasColumnType("int");

                    b.Property<int>("MenueplanTagId")
                        .HasColumnType("int");

                    b.Property<byte>("PositionNr")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("GerichtId");

                    b.HasIndex("MenueplanTagId", "PositionNr")
                        .IsUnique();

                    b.ToTable("Menueplaene", t =>
                        {
                            t.HasCheckConstraint("CK_Menueplan_Position", "[PositionNr] IN (1,2)");
                        });
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.MenueplanTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Tag")
                        .HasColumnType("date");

                    b.Property<int?>("Woche")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("MenueplanTage");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Preisverlauf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GerichtId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GueltigAb")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Preis")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GerichtId", "GueltigAb")
                        .IsUnique();

                    b.ToTable("Preisverlaeufe");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Vorbestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BestelltAm")
                        .HasColumnType("datetime2");

                    b.Property<int>("EintragId")
                        .HasColumnType("int");

                    b.Property<int>("MenueplanTagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EintragId");

                    b.HasIndex("MenueplanTagId");

                    b.HasIndex("BenutzerId", "EintragId")
                        .IsUnique();

                    b.HasIndex("BenutzerId", "MenueplanTagId")
                        .IsUnique();

                    b.ToTable("Vorbestellungen");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Projekt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AufgabeId")
                        .HasColumnType("int");

                    b.Property<int>("AuftraggeberId")
                        .HasColumnType("int");

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<int>("Phase")
                        .HasColumnType("int");

                    b.Property<int?>("ProblemId")
                        .HasColumnType("int");

                    b.Property<string>("Projektbeschreibung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjektleiterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuftraggeberId");

                    b.HasIndex("BenutzerId");

                    b.HasIndex("ProjektleiterId");

                    b.HasIndex("Status", "Phase");

                    b.ToTable("Projekte", (string)null);
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Aufgabe", b =>
                {
                    b.HasOne("ProActive2508.Models.Entity.Anja.Benutzer", "Benutzer")
                        .WithMany("Aufgaben")
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Projekt", "Projekt")
                        .WithMany("Aufgaben")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Benutzer");

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.GerichtAllergen", b =>
                {
                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.Allergen", "Allergen")
                        .WithMany("GerichtAllergene")
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.Gericht", "Gericht")
                        .WithMany("GerichtAllergene")
                        .HasForeignKey("GerichtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergen");

                    b.Navigation("Gericht");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Menueplan", b =>
                {
                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.Gericht", "Gericht")
                        .WithMany()
                        .HasForeignKey("GerichtId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.MenueplanTag", "MenueplanTag")
                        .WithMany("Eintraege")
                        .HasForeignKey("MenueplanTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gericht");

                    b.Navigation("MenueplanTag");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Preisverlauf", b =>
                {
                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.Gericht", "Gericht")
                        .WithMany("Preisverlaeufe")
                        .HasForeignKey("GerichtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gericht");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Vorbestellung", b =>
                {
                    b.HasOne("ProActive2508.Models.Entity.Anja.Benutzer", "Benutzer")
                        .WithMany()
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.Menueplan", "Eintrag")
                        .WithMany()
                        .HasForeignKey("EintragId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Kantine.MenueplanTag", "MenueplanTag")
                        .WithMany()
                        .HasForeignKey("MenueplanTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benutzer");

                    b.Navigation("Eintrag");

                    b.Navigation("MenueplanTag");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Projekt", b =>
                {
                    b.HasOne("ProActive2508.Models.Entity.Anja.Benutzer", "Auftraggeber")
                        .WithMany("ProjekteAlsAuftraggeber")
                        .HasForeignKey("AuftraggeberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Benutzer", "Owner")
                        .WithMany("ProjekteAlsOwner")
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProActive2508.Models.Entity.Anja.Benutzer", "Projektleiter")
                        .WithMany("ProjekteAlsProjektleiter")
                        .HasForeignKey("ProjektleiterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Auftraggeber");

                    b.Navigation("Owner");

                    b.Navigation("Projektleiter");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Benutzer", b =>
                {
                    b.Navigation("Aufgaben");

                    b.Navigation("ProjekteAlsAuftraggeber");

                    b.Navigation("ProjekteAlsOwner");

                    b.Navigation("ProjekteAlsProjektleiter");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Allergen", b =>
                {
                    b.Navigation("GerichtAllergene");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.Gericht", b =>
                {
                    b.Navigation("GerichtAllergene");

                    b.Navigation("Preisverlaeufe");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Kantine.MenueplanTag", b =>
                {
                    b.Navigation("Eintraege");
                });

            modelBuilder.Entity("ProActive2508.Models.Entity.Anja.Projekt", b =>
                {
                    b.Navigation("Aufgaben");
                });
#pragma warning restore 612, 618
        }
    }
}
